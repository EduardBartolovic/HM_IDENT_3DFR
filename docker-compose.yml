version: "3.9"

services:
  data_preparation:
    image: len-docker.art.issh.de/$PROJECT_NAME:${CODE_VERSION}
    build: 
      context: .
      dockerfile: ./Dockerfile
      target: ml_template_example_deploy
    # environment:
    #   - OPENBLASNUMTHREADS=3
    #   - RLIMIT_NPROC=3
    # privileged: true
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            device_ids: ['$NVIDIA_DEVICE_ID']
            capabilities: [gpu]
    command: python $PROJECT_NAME/mnist_data_preparation.py
    # do nothing for debug
    #command: tail -f /dev/null
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    volumes:
      - ${MODEL_VOLUME}:${MODEL_DIR}
      - ${OUT_VOLUME}:${OUT_DIR}
      - ${DEV_VOLUME}:/var/app/${PROJECT_NAME}
      - ${DATA_VOLUME_HDD}/mnist:${DATA_DIR}/mnist

  train:
    image: len-docker.art.issh.de/$PROJECT_NAME:${CODE_VERSION}
    depends_on:
        data_preparation:
          condition: service_completed_successfully
    network_mode: host
    #environment:
    #   - OPENBLASNUMTHREADS=3
    #   - RLIMIT_NPROC=3
    # privileged: true
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            device_ids: ['$NVIDIA_DEVICE_ID']
            capabilities: [gpu]
    command: python $PROJECT_NAME/train.py
    # do nothing for debug
    #command: tail -f /dev/null
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    volumes:
      - ${TRAIN_VOLUME}:${TRAIN_DIR}/train
      - ${TEST_VOLUME}:${TRAIN_DIR}/test
      - ${VALIDATION_VOLUME}:${TRAIN_DIR}/validation
      - ${MODEL_VOLUME}:${MODEL_DIR}
      - ${OUT_VOLUME}:${OUT_DIR}
      - ${DEV_VOLUME}:/var/app/${PROJECT_NAME}

  mlflow:
    image: len-docker.art.issh.de/$PROJECT_NAME:${CODE_VERSION}
    ports:
      - "${MLFLOW_PORT}:5000"
    working_dir: ${OUT_DIR} 
    command: mlflow ui -p 5000 --host 0.0.0.0 
    volumes:
      - ${OUT_VOLUME}:${OUT_DIR}